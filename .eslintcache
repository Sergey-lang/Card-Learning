[{"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\App.tsx":"1","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\ErrorSnackBar\\ErrorSnackBar.tsx":"2","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\04-cards-api.ts":"3","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\index.tsx":"4","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\reportWebVitals.ts":"5","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\NavBar\\NavBar.tsx":"6","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\ProgressBar\\ProgressBar.tsx":"7","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\00-login-api.ts":"8","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\01-regestration-api.ts":"9","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\03-cardsPack-api.ts":"10","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Button\\Button.tsx":"11","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\CheckBox\\Checkbox.tsx":"12","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\SelectInput\\SelectInput.tsx":"13","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\SendingForm\\SendingForm.tsx":"14","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\DoubleRange\\DoubleRange.tsx":"15","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\Paginator\\Paginator.tsx":"16","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\api.ts":"17","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\02-password-api.ts":"18","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\Modal.tsx":"19","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\Routes\\Routes.tsx":"20","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\InputText\\UniversalInputText.tsx":"21","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\DoubleRange\\Checkbox\\UniversalCheckbox.tsx":"22","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\ModalForCards\\ModalForAddCard.tsx":"23","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\ModalForCards\\ModalForDelete.tsx":"24","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\ModalForCards\\ModalForUpdateCardsPack.tsx":"25","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\ModalForCards\\ModalForUpdateCard.tsx":"26","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Button\\FormButton\\UniversalButton.tsx":"27","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\NotFound\\Error404.tsx":"28","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\00-Header\\header.tsx":"29","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\04-Profile\\Profile.tsx":"30","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\01-Login\\Login.tsx":"31","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\01-Login\\Logout.tsx":"32","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\03-PasswordRecovery\\PasswordRecovery.tsx":"33","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\02-Registration\\Registration.tsx":"34","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\05-CardPacks\\CardPacks.tsx":"35","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\06-Cards\\Cards.tsx":"36","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\07-Learning\\LearningPage.tsx":"37","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\05-CardPacks\\CardPaksElement\\CardPacksElement.tsx":"38","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\06-Cards\\CardElement\\CardElement.tsx":"39","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\03-PasswordRecovery\\ResetPassword.tsx":"40","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\00-Header\\Header.tsx":"41","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\ModalForPack\\ModalForAddPack.tsx":"42","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\07-Learning\\LearnCardElement\\LearnCardElement.tsx":"43","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\store.ts":"44","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\01-Login\\auth-reducer.ts":"45","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\06-Cards\\cards-reducer.ts":"46","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\02-Registration\\registration-reducer.ts":"47","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\03-PasswordRecovery\\resetPassword-thunks.ts":"48","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\app-reducer.ts":"49","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\01-Login\\00-index.ts":"50","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\01-Login\\01-selectors.ts":"51","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\05-CardPacks\\cardPacks-reducer.ts":"52","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\05-CardPacks\\01-selectors.ts":"53","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\00-index.ts":"54","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\01-selectors.ts":"55","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\04-Profile\\FileInput\\FileInput.tsx":"56"},{"size":1193,"mtime":1614005198071,"results":"57","hashOfConfig":"58"},{"size":911,"mtime":1614005592299,"results":"59","hashOfConfig":"58"},{"size":1343,"mtime":1614004013558,"results":"60","hashOfConfig":"58"},{"size":974,"mtime":1614004013625,"results":"61","hashOfConfig":"58"},{"size":440,"mtime":1610218992009,"results":"62","hashOfConfig":"58"},{"size":1525,"mtime":1614003018715,"results":"63","hashOfConfig":"58"},{"size":401,"mtime":1614001042511,"results":"64","hashOfConfig":"58"},{"size":704,"mtime":1614004013605,"results":"65","hashOfConfig":"58"},{"size":384,"mtime":1614004013517,"results":"66","hashOfConfig":"58"},{"size":1101,"mtime":1614005047899,"results":"67","hashOfConfig":"58"},{"size":503,"mtime":1614000231578,"results":"68","hashOfConfig":"58"},{"size":1255,"mtime":1611436006242,"results":"69","hashOfConfig":"58"},{"size":731,"mtime":1610218992004,"results":"70","hashOfConfig":"58"},{"size":2532,"mtime":1614001042512,"results":"71","hashOfConfig":"58"},{"size":3007,"mtime":1614000231608,"results":"72","hashOfConfig":"58"},{"size":1959,"mtime":1614001042505,"results":"73","hashOfConfig":"58"},{"size":284,"mtime":1614000231135,"results":"74","hashOfConfig":"58"},{"size":1022,"mtime":1614001042426,"results":"75","hashOfConfig":"58"},{"size":679,"mtime":1614001042507,"results":"76","hashOfConfig":"58"},{"size":2084,"mtime":1614003018679,"results":"77","hashOfConfig":"58"},{"size":2641,"mtime":1614000231609,"results":"78","hashOfConfig":"58"},{"size":1991,"mtime":1614000231608,"results":"79","hashOfConfig":"58"},{"size":2066,"mtime":1614001042508,"results":"80","hashOfConfig":"58"},{"size":816,"mtime":1614001042508,"results":"81","hashOfConfig":"58"},{"size":1255,"mtime":1614001042509,"results":"82","hashOfConfig":"58"},{"size":1641,"mtime":1614001042509,"results":"83","hashOfConfig":"58"},{"size":1076,"mtime":1614000231579,"results":"84","hashOfConfig":"58"},{"size":720,"mtime":1614003018670,"results":"85","hashOfConfig":"58"},{"size":1701,"mtime":1611928469042,"results":"86","hashOfConfig":"58"},{"size":3370,"mtime":1614007776433,"results":"87","hashOfConfig":"58"},{"size":3081,"mtime":1614005259962,"results":"88","hashOfConfig":"58"},{"size":467,"mtime":1614005299201,"results":"89","hashOfConfig":"58"},{"size":1562,"mtime":1614005575555,"results":"90","hashOfConfig":"58"},{"size":2793,"mtime":1614004013425,"results":"91","hashOfConfig":"58"},{"size":5938,"mtime":1614004726425,"results":"92","hashOfConfig":"58"},{"size":3521,"mtime":1614005685825,"results":"93","hashOfConfig":"58"},{"size":3245,"mtime":1614004826810,"results":"94","hashOfConfig":"58"},{"size":2985,"mtime":1614005625797,"results":"95","hashOfConfig":"58"},{"size":2973,"mtime":1614005662358,"results":"96","hashOfConfig":"58"},{"size":1928,"mtime":1614005763863,"results":"97","hashOfConfig":"58"},{"size":1694,"mtime":1614003018694,"results":"98","hashOfConfig":"58"},{"size":1828,"mtime":1614001042510,"results":"99","hashOfConfig":"58"},{"size":1826,"mtime":1614004013396,"results":"100","hashOfConfig":"58"},{"size":816,"mtime":1614005047948,"results":"101","hashOfConfig":"58"},{"size":4587,"mtime":1614005405645,"results":"102","hashOfConfig":"58"},{"size":5235,"mtime":1614005575562,"results":"103","hashOfConfig":"58"},{"size":3348,"mtime":1614005422894,"results":"104","hashOfConfig":"58"},{"size":1677,"mtime":1614005518689,"results":"105","hashOfConfig":"58"},{"size":1666,"mtime":1614004188835,"results":"106","hashOfConfig":"58"},{"size":81,"mtime":1613329464049,"results":"107","hashOfConfig":"58"},{"size":284,"mtime":1614004067071,"results":"108","hashOfConfig":"58"},{"size":6299,"mtime":1614005047906,"results":"109","hashOfConfig":"58"},{"size":574,"mtime":1614005047890,"results":"110","hashOfConfig":"58"},{"size":79,"mtime":1613329464303,"results":"111","hashOfConfig":"58"},{"size":209,"mtime":1614005706853,"results":"112","hashOfConfig":"58"},{"size":2597,"mtime":1614006798291,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},"328rna",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"117"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"117"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"189","usedDeprecatedRules":"117"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"192","usedDeprecatedRules":"117"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"117"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"117"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"117"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"117"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\App.tsx",["237"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from './store';\r\nimport ProgressBar from '../03-Components/SuperComponents/ProgressBar/ProgressBar';\r\nimport {getAuthUserData} from '../02-Features/01-Login/auth-reducer';\r\nimport Header from '../02-Features/00-Header/Header';\r\nimport Routes from './Routes/Routes';\r\nimport ErrorSnackBar from '../03-Components/ErrorSnackBar/ErrorSnackBar';\r\n\r\nimport './App.css';\r\nimport {appSelectors} from './00-index';\r\n\r\nconst App: React.FC = () => {\r\n\r\n    const appStatus = useSelector<RootStateType, string>(appSelectors.selectorAppStatus)\r\n    // const finalStyle = appStatus === 'loading' ? `${s.fullOverlay} ${s.activeFullOverlay}` : s.fullOverlay\r\n\r\n    const error = useSelector<RootStateType, string | null>(appSelectors.selectorError)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getAuthUserData())\r\n    }, []);\r\n\r\n    return <div className='App'>\r\n        <Header/>\r\n        {appStatus === 'loading' ? <ProgressBar/> : null}\r\n        <Routes/>\r\n        {error && <ErrorSnackBar errorMessage={error}/>}\r\n    </div>\r\n}\r\n\r\nexport default App;\r\n",["238","239"],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\ErrorSnackBar\\ErrorSnackBar.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\04-cards-api.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\index.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\reportWebVitals.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\NavBar\\NavBar.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\ProgressBar\\ProgressBar.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\00-login-api.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\01-regestration-api.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\03-cardsPack-api.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Button\\Button.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\CheckBox\\Checkbox.tsx",[],["240","241"],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\SelectInput\\SelectInput.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\SendingForm\\SendingForm.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\DoubleRange\\DoubleRange.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\Paginator\\Paginator.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\api.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\02-password-api.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\Modal.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\Routes\\Routes.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\InputText\\UniversalInputText.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\DoubleRange\\Checkbox\\UniversalCheckbox.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\ModalForCards\\ModalForAddCard.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\ModalForCards\\ModalForDelete.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\ModalForCards\\ModalForUpdateCardsPack.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\ModalForCards\\ModalForUpdateCard.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Button\\FormButton\\UniversalButton.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\NotFound\\Error404.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\00-Header\\header.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\04-Profile\\Profile.tsx",["242","243"],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\01-Login\\Login.tsx",["244"],"import React, {ChangeEvent, useCallback, useState} from 'react';\r\nimport stylesContainer from '../../assets/css/container.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../04-App/store';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {getAuthUserData, login} from './auth-reducer';\r\nimport UniversalButton from '../../03-Components/SuperComponents/Button/FormButton/UniversalButton';\r\nimport UniversalInputText from '../../03-Components/SuperComponents/InputText/UniversalInputText';\r\nimport UniversalCheckbox from '../../03-Components/SuperComponents/DoubleRange/Checkbox/UniversalCheckbox';\r\nimport {PATH} from '../../04-App/Routes/Routes';\r\n\r\nimport s from '../01-Login/Login.module.css';\r\nimport {selectorIsAuth} from './01-selectors';\r\nimport {appSelectors} from '../../04-App/00-index';\r\n\r\ntype LoginPropsType = {}\r\n\r\nconst Login: React.FC<LoginPropsType> = React.memo(() => {\r\n\r\n    const isAuth = useSelector<RootStateType, boolean>(selectorIsAuth)\r\n    const appStatus = useSelector<RootStateType, string>(appSelectors.selectorAppStatus)\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const onclickEmail = useCallback((e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value), [setEmail])\r\n    const onclickPassword = useCallback((e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value), [setPassword])\r\n\r\n    const dispatch = useDispatch()\r\n    const onclickHandler = useCallback(() => {\r\n        dispatch(login(email, password, rememberMe))\r\n    }, [email, password, rememberMe, dispatch])\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n    return <div className={stylesContainer.container}>\r\n        <h4>SIGN IN</h4>\r\n        <div className={stylesContainer.inner}>\r\n            <UniversalInputText type={'email'}\r\n                                placeholder={'Enter email'}\r\n                                onChange={onclickEmail}/>\r\n            <UniversalInputText type={'password'}\r\n                                placeholder={'Password'}\r\n                                onChange={onclickPassword}/>\r\n            <UniversalCheckbox onChangeChecked={setRememberMe}>Remember me</UniversalCheckbox>\r\n            <UniversalButton disabled={appStatus === 'loading'}\r\n                             onClick={onclickHandler}> SUBMIT </UniversalButton>\r\n            <hr/>\r\n            <p>Not registered? <NavLink to={PATH.REG}\r\n                                        activeClassName={stylesContainer.activeLink}\r\n                                        className={s.inactive}>Create an Account.</NavLink></p>\r\n            <p>Forgot password? <NavLink to={PATH.PASS_REC}\r\n                                         activeClassName={stylesContainer.activeLink}\r\n                                         className={s.inactive}>Click here to recover.</NavLink></p>\r\n        </div>\r\n    </div>\r\n});\r\n\r\nexport default Login;\r\n","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\01-Login\\Logout.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\03-PasswordRecovery\\PasswordRecovery.tsx",["245"],"import React, {useEffect} from 'react';\r\nimport {RootStateType} from '../../04-App/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {SendingForm} from '../../03-Components/SuperComponents/SendingForm/SendingForm';\r\nimport {sendRecoveryEmail} from './resetPassword-thunks';\r\nimport {PATH} from '../../04-App/Routes/Routes';\r\nimport stylesContainer from '../../assets/css/container.module.css';\r\nimport {setAppStatus} from '../../04-App/app-reducer';\r\nimport {appSelectors} from '../../04-App/00-index';\r\n\r\nexport const PasswordRecovery: React.FC = () => {\r\n\r\n    const appStatus = useSelector<RootStateType, string>(appSelectors.selectorAppStatus)\r\n\r\n    const sendEmail = (email: string) => {\r\n        dispatch(sendRecoveryEmail(email))\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setAppStatus({status: 'idle', error: null}))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={stylesContainer.container}>\r\n            <SendingForm formName={'RECOVERY PASSWORD'}\r\n                         formDescription={`Enter the email address you used to register and we'll send you the instruction`}\r\n                         callback={sendEmail}\r\n                         inputPlaceholder={'enter your email address'}\r\n                         inputType={'email'}\r\n                         buttonName={'Send'}\r\n                         btnDisabled={appStatus === 'loading'}\r\n                         navLinkPath={PATH.LOGIN}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\02-Registration\\Registration.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\05-CardPacks\\CardPacks.tsx",["246","247","248"],"import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport style from '../../assets/css/dataForm.module.css'\r\nimport s from './CardPacks.module.css'\r\nimport {\r\n    addCardPacks,\r\n    CardPacksFilterType,\r\n    CardPacksType,\r\n    deleteCardPacks,\r\n    getCardPacks,\r\n    showMode,\r\n    updateCardPacks\r\n} from '../05-CardPacks/cardPacks-reducer';\r\nimport {RootStateType} from '../../04-App/store';\r\nimport CardPacksElement from './CardPaksElement/CardPacksElement';\r\nimport {Paginator} from '../../03-Components/Paginator/Paginator';\r\nimport DoubleRange from '../../03-Components/SuperComponents/DoubleRange/DoubleRange';\r\nimport {PATH} from '../../04-App/Routes/Routes';\r\nimport UniversalInputText from '../../03-Components/SuperComponents/InputText/UniversalInputText';\r\nimport UniversalCheckbox from '../../03-Components/SuperComponents/DoubleRange/Checkbox/UniversalCheckbox';\r\nimport UniversalButton from '../../03-Components/SuperComponents/Button/FormButton/UniversalButton';\r\nimport ModalForAddPack from '../../03-Components/SuperComponents/Modal/ModalForPack/ModalForAddPack';\r\nimport {authSelectors} from '../01-Login/00-index';\r\nimport {\r\n    selectorCardPacks,\r\n    selectorCurrentPage, selectorEditMode,\r\n    selectorFilter,\r\n    selectorPacksTotalCount,\r\n    selectorPageSize\r\n} from './01-selectors';\r\nimport {UserDataType} from '../01-Login/auth-reducer';\r\nimport {selectorUserData} from '../01-Login/01-selectors';\r\n\r\nconst CardPacks: React.FC = () => {\r\n    const isAuth = useSelector<RootStateType, boolean>(authSelectors.selectorIsAuth)\r\n    const cardPacks = useSelector<RootStateType, CardPacksType[]>(selectorCardPacks)\r\n\r\n    //filter data\r\n    const packsTotalCount = useSelector<RootStateType, number>(selectorPacksTotalCount)\r\n    const filter = useSelector<RootStateType, CardPacksFilterType>(selectorFilter)\r\n    const currentPage = useSelector<RootStateType, number>(selectorCurrentPage)\r\n    const pageSize = useSelector<RootStateType, number>(selectorPageSize)\r\n    const editMode = useSelector<RootStateType, boolean>(selectorEditMode)\r\n\r\n    const userData = useSelector<RootStateType, UserDataType | null>(selectorUserData)\r\n\r\n    //filter state\r\n    const [inputValue, setInputValue] = useState<string>('')\r\n    const [range, setRange] = useState([0, 15])\r\n\r\n    //for modal\r\n    const [activeModalAdd, setActiveModalAdd] = useState<boolean>(false)\r\n    const [namePack, setNamePack] = useState<string>('')\r\n    const [typeNewPack, setTypeNewPack] = useState<string>('undefined')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = useCallback((currentPage: number) => {\r\n        dispatch(getCardPacks(currentPage, pageSize, filtered))\r\n    }, [currentPage])\r\n\r\n    const onSearch = () => dispatch(getCardPacks(currentPage, pageSize, filtered))\r\n    const showOwnPack = (e: ChangeEvent<HTMLInputElement>) => dispatch(showMode(e.target.checked))\r\n    const inputHandler = (e: ChangeEvent<HTMLInputElement>) => setInputValue(e.currentTarget.value)\r\n\r\n    const filtered: CardPacksFilterType = {\r\n        packName: inputValue,\r\n        min: range[0],\r\n        max: range[1],\r\n        userId: editMode && userData ? userData._id : ''\r\n    }\r\n\r\n    function genID(serverNum: number) {\r\n        return (serverNum + '' + (new Date).getTime());\r\n    }\r\n\r\n    const cardTestObj: CardPacksType = {\r\n        _id: genID(5),\r\n        name: namePack,\r\n        type: typeNewPack\r\n    }\r\n\r\n    const onAddCardPacks = () => {\r\n        setActiveModalAdd(true)\r\n    }\r\n    const addPackHandler = () => {\r\n        dispatch(addCardPacks(cardTestObj))\r\n        setActiveModalAdd(false)\r\n    }\r\n    const changeCardPacks = (cardsPack: CardPacksType) => {\r\n        dispatch(updateCardPacks(cardsPack))\r\n    }\r\n    const removeCardPacks = (_id: string) => {\r\n        dispatch(deleteCardPacks(_id))\r\n    }\r\n\r\n    const mappedPacks = cardPacks.map((p: CardPacksType) =>\r\n        <CardPacksElement key={p._id}\r\n                          pack={p}\r\n                          updateCardPacks={changeCardPacks}\r\n                          removeCardPacks={removeCardPacks}/>)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardPacks(currentPage, pageSize, filter))\r\n    }, [])\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (<>\r\n            <div className={style.dataForm}>\r\n                <div className={s.search}>\r\n                    <h4>FORM FOR SEARCH</h4>\r\n                    <DoubleRange range={range} setRange={setRange}/>\r\n                    <UniversalInputText onChange={inputHandler} placeholder={'search...'}/>\r\n                    <UniversalCheckbox\r\n                        checked={true}//!!!!!!\r\n                        onChange={showOwnPack}>\r\n                        Show only mine pack\r\n                    </UniversalCheckbox>\r\n                    <UniversalButton onClick={onSearch}>Search</UniversalButton>\r\n                    <UniversalButton onClick={onAddCardPacks}>Add new CardPack</UniversalButton>\r\n                </div>\r\n                <div className={s.cards}>\r\n                    <Paginator currentPage={currentPage}\r\n                               onPageChanged={onPageChanged}\r\n                               pageSize={pageSize}\r\n                               totalItemsCount={packsTotalCount}/>\r\n                    <table className={s.table}>\r\n                        <tbody> {\r\n                            mappedPacks\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <ModalForAddPack active={activeModalAdd} setActive={setActiveModalAdd} addPackHandler={addPackHandler}\r\n                             setNamePack={setNamePack} setTypeNewPack={setTypeNewPack}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardPacks\r\n","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\06-Cards\\Cards.tsx",["249","250"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../04-App/store';\r\nimport s from './Cards.module.css'\r\nimport {addCard, CardType, deleteCard, getCards, updateCard} from './cards-reducer';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport CardElement from './CardElement/CardElement';\r\nimport ModalForAddCards from '../../03-Components/SuperComponents/Modal/ModalForCards/ModalForAddCard';\r\nimport {PATH} from '../../04-App/Routes/Routes';\r\nimport UniversalButton from '../../03-Components/SuperComponents/Button/FormButton/UniversalButton';\r\nimport {authSelectors} from '../01-Login/00-index';\r\n\r\n\r\nconst Cards: React.FC = () => {\r\n\r\n    const {id} = useParams<{ id: string }>();\r\n\r\n    const cards = useSelector<RootStateType, CardType[]>(state => state.cards.cards)\r\n\r\n    const dispatch = useDispatch()\r\n    //for modal\r\n    const [activeModalAdd, setActiveModalAdd] = useState<boolean>(false)\r\n    const [newQuestionCard, setNewQuestionCard] = useState<string>('')\r\n    const [newAnswerCard, setNewAnswerCard] = useState<string>('')\r\n    const [typeNewCard, setTypeNewCard] = useState<string>('undefined')\r\n\r\n    const isAuth = useSelector<RootStateType, boolean>(authSelectors.selectorIsAuth)\r\n\r\n    //request on start, data from redux\r\n    useEffect(() => {\r\n        dispatch(getCards(id))\r\n    }, [])\r\n\r\n    const onSearch = () => {\r\n        // dispatch(getCards({packName: inputValue, min: range[0], max: range[1]}))\r\n    }\r\n\r\n    function genID(serverNum: number) {\r\n        return (serverNum + '' + (new Date).getTime());\r\n    }\r\n\r\n    //fake obj for creating\r\n    const cardTestObj: CardType = {\r\n        _id: genID(2),\r\n        type: typeNewCard,\r\n        question: newQuestionCard,\r\n        answer: newAnswerCard,\r\n        cardsPack_id: id,\r\n        grade: 4.54654,\r\n        rating: 0\r\n    }\r\n\r\n    const onAddCard = () => {\r\n        setActiveModalAdd(true)\r\n    }\r\n\r\n    const changeCard = (card: CardType) => {\r\n        dispatch(updateCard(card))\r\n    }\r\n    const addCardHandler = () => {\r\n        dispatch(addCard(cardTestObj))\r\n        setActiveModalAdd(false)\r\n    }\r\n\r\n    const removeCard = (id: string) => {\r\n        dispatch(deleteCard(id))\r\n    }\r\n\r\n    if (!isAuth) return <Redirect to={PATH.LOGIN}/>\r\n    const mappedCards = cards.map((card: CardType) => <CardElement key={card._id}\r\n                                                                   card={card}\r\n                                                                   updateCard={changeCard}\r\n                                                                   removeCard={removeCard}/>)\r\n    return <>\r\n        <div className={s.cardsPage}>\r\n            <div>\r\n                <h4> AVAILABLE CARDS </h4>\r\n            </div>\r\n            <div className={s.cardsBlock}>\r\n                {\r\n                    mappedCards\r\n                }\r\n            </div>\r\n            <div className={s.search}>\r\n                <UniversalButton onClick={onSearch}>Search</UniversalButton>\r\n                <UniversalButton onClick={onAddCard}>Add\r\n                    Card</UniversalButton>\r\n            </div>\r\n        </div>\r\n        <ModalForAddCards active={activeModalAdd} setActive={setActiveModalAdd} addCardHandler={addCardHandler}\r\n                          setNewQuestionCard={setNewQuestionCard} setNewAnswerCard={setNewAnswerCard}\r\n                          setTypeNewCard={setTypeNewCard}/>\r\n    </>\r\n}\r\n\r\nexport default Cards\r\n","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\07-Learning\\LearningPage.tsx",["251","252"],"import React, {useCallback, useEffect, useState} from 'react';\r\n\r\nimport s from './LearningPage.module.css'\r\nimport {CardType, getCards, sendGrade} from '../06-Cards/cards-reducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../04-App/store';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {PATH} from '../../04-App/Routes/Routes';\r\nimport ErrorSnackBar from '../../03-Components/ErrorSnackBar/ErrorSnackBar';\r\nimport {LearnCardElement} from './LearnCardElement/LearnCardElement';\r\nimport {authSelectors} from '../01-Login/00-index';\r\nimport {appSelectors} from '../../04-App/00-index';\r\n\r\nconst grades = ['no idea', 'forgot', 'think long', 'mix up', 'knew'];\r\n\r\nconst getRandomCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nexport const LearningPage: React.FC = React.memo(() => {\r\n    const cards = useSelector<RootStateType, CardType[]>(state => state.cards.cards)\r\n    const isAuth = useSelector<RootStateType, boolean>(authSelectors.selectorIsAuth)\r\n    const error = useSelector<RootStateType, string | null>(appSelectors.selectorError)\r\n\r\n    const {id} = useParams<{ id: string }>();\r\n\r\n    const [firstCard, setFirstCard] = useState<boolean>(true)\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [card, setCard] = useState<CardType>({\r\n        _id: ''\r\n    } as CardType)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (firstCard) {\r\n            dispatch(getCards(id))\r\n            setFirstCard(false)\r\n        }\r\n        if (cards.length > 0) {\r\n            setCard(getRandomCard(cards))\r\n            return () => {\r\n                console.log('Learning Page clear effect ')\r\n            }\r\n        } else {\r\n\r\n        }\r\n    }, [cards, dispatch])\r\n\r\n    const onNextCard = useCallback((grade: number) => {\r\n        setIsChecked(false);\r\n        if (cards.length > 0) {\r\n            if(!card._id) {\r\n                console.log('error in useCallback')\r\n            }\r\n            dispatch(sendGrade(grade, card._id))\r\n            setCard(getRandomCard(cards))\r\n        } else {\r\n            alert(`Something bad 'onNextCard'`)\r\n        }\r\n    }, [cards, card])\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.pageContainer}>\r\n            {cards.length > 0 && <LearnCardElement card={card}\r\n                                                   grades={grades}\r\n                                                   checked={isChecked}\r\n                                                   setIsChecked={setIsChecked}\r\n                                                   onNextCard={onNextCard}/>\r\n            }\r\n            {error && <ErrorSnackBar errorMessage={error}/>}\r\n        </div>\r\n    )\r\n})\r\n","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\05-CardPacks\\CardPaksElement\\CardPacksElement.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\06-Cards\\CardElement\\CardElement.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\03-PasswordRecovery\\ResetPassword.tsx",["253"],"import React, {useEffect} from 'react';\r\nimport {RootStateType} from '../../04-App/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {SendingForm} from '../../03-Components/SuperComponents/SendingForm/SendingForm';\r\nimport {resetPassword} from './resetPassword-thunks';\r\nimport {PATH} from '../../04-App/Routes/Routes';\r\nimport stylesContainer from '../../assets/css/container.module.css';\r\nimport {setAppStatus} from '../../04-App/app-reducer';\r\n\r\nexport const ResetPassword: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<Record<string, string | undefined>>();\r\n    const history = useHistory();\r\n\r\n    const appStatus = useSelector<RootStateType, string>((state) => state.app.appState.status)\r\n\r\n    const tokenName = token ? token : ''\r\n\r\n    const resetOldPassword = (password: string) => {\r\n        dispatch(resetPassword(password, tokenName))\r\n\r\n    }\r\n\r\n    const redirect = () => {\r\n        history.push(PATH.LOGIN);\r\n    }\r\n\r\n    //redirect\r\n    if (appStatus === 'succeeded') {\r\n        setTimeout(redirect, 3000)\r\n    }\r\n\r\n    //clear status\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            dispatch(setAppStatus({status: 'idle', error: null}))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={stylesContainer.container}>\r\n            <SendingForm formName={'RESET PASSWORD'}\r\n                         formDescription={`Create a new, strong password that you don't use for other websites`}\r\n                         callback={resetOldPassword}\r\n                         inputPlaceholder={'enter your new password'}\r\n                         inputType={'password'}\r\n                         buttonName={'Reset'}\r\n                         btnDisabled={appStatus === 'loading'}\r\n                         navLinkPath={PATH.LOGIN}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\00-Header\\Header.tsx",["254","255"],"import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Logout from '../01-Login/Logout';\r\nimport NavBar from '../../03-Components/NavBar/NavBar';\r\nimport {PATH} from '../../04-App/Routes/Routes';\r\n\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavBar/>\r\n            <div className={s.logo}>\r\n                Study Point\r\n                <span>.</span>\r\n            </div>\r\n            <nav className={s.nav}>\r\n               <span className={s.item}>\r\n                    <NavLink to={PATH.PROFILE} activeClassName={s.activeLink}>PROFILE</NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to={PATH.CARD_PACKS} activeClassName={s.activeLink}> CARDS PACK </NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to={PATH.LOGIN} activeClassName={s.activeLink}> SIGN IN </NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to={PATH.REG} activeClassName={s.activeLink}> SIGN UP </NavLink>\r\n                </span>\r\n                <span className={s.item}>\r\n                    <NavLink to={PATH.PASS_REC} activeClassName={s.activeLink}> RECOVERY PASSWORD </NavLink>\r\n                </span>\r\n                <span className={s.item}><Logout/></span>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n{/*<span className={s.item}>*/}\r\n{/*    <NavLink to={path.PASSWORD_POST} activeClassName={s.activeLink}> CHANGE PASSWORD </NavLink>*/}\r\n// {/*</span>*/}todo:it's should be privat link(check token in url!)\r\n","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\ModalForPack\\ModalForAddPack.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\07-Learning\\LearnCardElement\\LearnCardElement.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\store.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\01-Login\\auth-reducer.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\06-Cards\\cards-reducer.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\02-Registration\\registration-reducer.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\03-PasswordRecovery\\resetPassword-thunks.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\app-reducer.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\01-Login\\00-index.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\01-Login\\01-selectors.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\05-CardPacks\\cardPacks-reducer.ts",["256"],"import {Dispatch} from 'redux';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {setAppStatus} from '../../04-App/app-reducer';\r\nimport {cardPacksAPI} from '../../01-API/03-cardsPack-api';\r\nimport {RootStateType} from '../../04-App/store';\r\n\r\ntype ActionsType = ReturnType<typeof setCardPacks>\r\n    | ReturnType<typeof setFilter>\r\n    | ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setPacksTotalCount>\r\n    | ReturnType<typeof createCardPacks>\r\n    | ReturnType<typeof showMode>\r\n\r\nexport type CardPacksType = {\r\n    _id: string\r\n    user_id?: string\r\n    user_name?: string\r\n    private?: boolean\r\n    name: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    cardsCount?: number | undefined\r\n    type: string\r\n    rating?: number\r\n    created?: string | undefined\r\n    updated?: string\r\n    more_id?: string\r\n    __v?: number\r\n}\r\n\r\nexport type CardPacksFilterType = {\r\n    packName: string\r\n    min: number\r\n    max: number\r\n    userId: string,\r\n}\r\n\r\nconst initialState = {\r\n    cardPacks: [] as CardPacksType[],\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    packsTotalCount: 5,\r\n    showAll: false,\r\n    filter: {\r\n        packName: '',\r\n        min: 0,\r\n        max: 15,\r\n        userId: '',\r\n    } as CardPacksFilterType\r\n}\r\n\r\nexport type CardsPackInitialStateType = typeof initialState\r\n\r\nexport const cardPacksReducer = (state = initialState, actions: ActionsType): CardsPackInitialStateType => {\r\n    switch (actions.type) {\r\n        case 'CARDS/CARD-PACKS/SET-CURRENT-PAGE':\r\n            return {...state, currentPage: actions.currentPage};\r\n        case 'CARDS/CARD-PACKS/SET-PACKS-TOTAL-COUNT':\r\n            return {...state, packsTotalCount: actions.packsTotalCount};\r\n        case 'CARDS/CARD-PACKS/SET-FILTER':\r\n            return {...state, filter: actions.filter}\r\n        case 'CARDS/CARD-PACKS/SET-SHOW-MODE':\r\n            return {...state, showAll: actions.value}\r\n        case 'CARDS/CARD-PACKS/SET-CARDS':\r\n            return {...state, cardPacks: actions.cardPacks}\r\n        case 'CARDS/CARD-PACKS/ADD-CARDS':\r\n            return {...state, cardPacks: [actions.newPacks, ...state.cardPacks]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCardPacks = (cardPacks: CardPacksType[]) => ({type: 'CARDS/CARD-PACKS/SET-CARDS', cardPacks} as const)\r\nexport const createCardPacks = (newPacks: CardPacksType) => ({type: 'CARDS/CARD-PACKS/ADD-CARDS', newPacks} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({\r\n    type: 'CARDS/CARD-PACKS/SET-CURRENT-PAGE',\r\n    currentPage\r\n} as const)\r\nexport const setPacksTotalCount = (packsTotalCount: number) => ({\r\n    type: 'CARDS/CARD-PACKS/SET-PACKS-TOTAL-COUNT',\r\n    packsTotalCount\r\n} as const)\r\nexport const setFilter = (filter: CardPacksFilterType) => ({\r\n    type: 'CARDS/CARD-PACKS/SET-FILTER', filter\r\n} as const)\r\nexport const showMode = (value: boolean) => ({\r\n    type: 'CARDS/CARD-PACKS/SET-SHOW-MODE', value\r\n} as const)\r\n\r\nexport const getCardPacks = (requestPage: number, pageSize: number, filter: CardPacksFilterType) => async (dispatch: Dispatch<ActionsType>) => {\r\n\r\n    dispatch(setCurrentPage(requestPage))\r\n    dispatch(setFilter(filter))\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n\r\n    try {\r\n        const res = await cardPacksAPI.getCardPacks(requestPage, pageSize, filter.packName, filter.min, filter.max, filter.userId)\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(setCardPacks(res.data.cardPacks))\r\n        dispatch(setPacksTotalCount(res.data.cardPacksTotalCount))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const addCardPacks = (cardPacks: CardPacksType) => async (dispatch: ThunkDispatch<RootStateType, unknown, ActionsType>, getState: () => RootStateType) => {\r\n\r\n    const requestPage = getState().cardPacks.currentPage\r\n    const pageSize = getState().cardPacks.pageSize\r\n    const filter = getState().cardPacks.filter\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n\r\n    try {\r\n        await cardPacksAPI.createCardsPack(cardPacks)\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(getCardPacks(requestPage, pageSize, filter))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const updateCardPacks = (cardsPack: CardPacksType) => async (dispatch: ThunkDispatch<RootStateType, unknown, ActionsType>, getState: () => RootStateType) => {\r\n\r\n    const requestPage = getState().cardPacks.currentPage\r\n    const pageSize = getState().cardPacks.pageSize\r\n    const filter = getState().cardPacks.filter\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n\r\n    try {\r\n        await cardPacksAPI.updateCardsPack(cardsPack)\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(getCardPacks(requestPage, pageSize, filter))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n\r\nexport const deleteCardPacks = (id: string) => async (dispatch: ThunkDispatch<RootStateType, unknown, ActionsType>, getState: () => RootStateType) => {\r\n\r\n    const requestPage = getState().cardPacks.currentPage\r\n    const pageSize = getState().cardPacks.pageSize\r\n    const filter = getState().cardPacks.filter\r\n    dispatch(setAppStatus({status: 'loading', error: null}))\r\n\r\n    const res = await cardPacksAPI.deleteCardsPack(id)\r\n    try {\r\n        dispatch(setAppStatus({status: 'succeeded', error: null}))\r\n        dispatch(getCardPacks(requestPage, pageSize, filter))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setAppStatus({status: 'failed', error: error}))\r\n    }\r\n}\r\n","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\05-CardPacks\\01-selectors.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\00-index.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\01-selectors.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Features\\04-Profile\\FileInput\\FileInput.tsx",[],{"ruleId":"257","severity":1,"message":"258","line":23,"column":8,"nodeType":"259","endLine":23,"endColumn":10,"suggestions":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"261","replacedBy":"265"},{"ruleId":"263","replacedBy":"266"},{"ruleId":"267","severity":1,"message":"268","line":17,"column":44,"nodeType":"269","messageId":"270","endLine":17,"endColumn":52},{"ruleId":"267","severity":1,"message":"271","line":17,"column":54,"nodeType":"269","messageId":"270","endLine":17,"endColumn":59},{"ruleId":"267","severity":1,"message":"272","line":6,"column":9,"nodeType":"269","messageId":"270","endLine":6,"endColumn":24},{"ruleId":"257","severity":1,"message":"258","line":24,"column":8,"nodeType":"259","endLine":24,"endColumn":10,"suggestions":"273"},{"ruleId":"257","severity":1,"message":"274","line":62,"column":8,"nodeType":"259","endLine":62,"endColumn":21,"suggestions":"275"},{"ruleId":"276","severity":1,"message":"277","line":76,"column":35,"nodeType":"278","messageId":"279","endLine":76,"endColumn":43,"fix":"280"},{"ruleId":"257","severity":1,"message":"281","line":107,"column":8,"nodeType":"259","endLine":107,"endColumn":10,"suggestions":"282"},{"ruleId":"257","severity":1,"message":"283","line":32,"column":8,"nodeType":"259","endLine":32,"endColumn":10,"suggestions":"284"},{"ruleId":"276","severity":1,"message":"277","line":39,"column":35,"nodeType":"278","messageId":"279","endLine":39,"endColumn":43,"fix":"285"},{"ruleId":"257","severity":1,"message":"286","line":56,"column":8,"nodeType":"259","endLine":56,"endColumn":25,"suggestions":"287"},{"ruleId":"257","severity":1,"message":"288","line":69,"column":8,"nodeType":"259","endLine":69,"endColumn":21,"suggestions":"289"},{"ruleId":"257","severity":1,"message":"258","line":41,"column":8,"nodeType":"259","endLine":41,"endColumn":10,"suggestions":"290"},{"ruleId":"291","severity":1,"message":"292","line":41,"column":1,"nodeType":"293","messageId":"294","endLine":41,"endColumn":32},{"ruleId":"291","severity":1,"message":"292","line":42,"column":1,"nodeType":"293","messageId":"294","endLine":42,"endColumn":102},{"ruleId":"267","severity":1,"message":"295","line":156,"column":11,"nodeType":"269","messageId":"270","endLine":156,"endColumn":14},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["296"],"no-native-reassign",["297"],"no-negated-in-lhs",["298"],["297"],["298"],"@typescript-eslint/no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","'reset' is assigned a value but never used.","'getAuthUserData' is defined but never used.",["299"],"React Hook useCallback has missing dependencies: 'dispatch', 'filtered', and 'pageSize'. Either include them or remove the dependency array.",["300"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"301","text":"302"},"React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', and 'pageSize'. Either include them or remove the dependency array.",["303"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["304"],{"range":"305","text":"302"},"React Hook useEffect has missing dependencies: 'firstCard' and 'id'. Either include them or remove the dependency array.",["306"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["307"],["308"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'res' is assigned a value but never used.",{"desc":"309","fix":"310"},"no-global-assign","no-unsafe-negation",{"desc":"309","fix":"311"},{"desc":"312","fix":"313"},[3399,3399],"()",{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},[1621,1621],{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"309","fix":"322"},"Update the dependencies array to be: [dispatch]",{"range":"323","text":"324"},{"range":"325","text":"324"},"Update the dependencies array to be: [dispatch, filtered, pageSize]",{"range":"326","text":"327"},"Update the dependencies array to be: [currentPage, dispatch, filter, pageSize]",{"range":"328","text":"329"},"Update the dependencies array to be: [dispatch, id]",{"range":"330","text":"331"},"Update the dependencies array to be: [cards, dispatch, firstCard, id]",{"range":"332","text":"333"},"Update the dependencies array to be: [cards, card._id, dispatch]",{"range":"334","text":"335"},{"range":"336","text":"324"},[958,960],"[dispatch]",[937,939],[2820,2833],"[dispatch, filtered, pageSize]",[4315,4317],"[currentPage, dispatch, filter, pageSize]",[1407,1409],"[dispatch, id]",[2214,2231],"[cards, dispatch, firstCard, id]",[2631,2644],"[cards, card._id, dispatch]",[1308,1310]]