[{"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\store.ts":"1","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\NavBar\\NavBar.tsx":"2","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\05-CardPacks\\CardPacks.tsx":"3","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\CheckBox\\Checkbox.tsx":"4","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\login-reducer.ts":"5","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\api.ts":"6","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\card-packs-reducer.ts":"7","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\05-CardPacks\\CardPaksElement\\CardPacksElement.tsx":"8","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\00-login-api.ts":"9","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\03-cardsPack-api.ts":"10","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\index.tsx":"11","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\reportWebVitals.ts":"12","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\App.tsx":"13","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\registration-reducer.ts":"14","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\app-reducer.ts":"15","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\profile-reducer.ts":"16","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\cards-reducer.ts":"17","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\AllComponents.tsx":"18","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\NotFound\\NotFound.tsx":"19","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\01-Login\\Login.tsx":"20","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\02-Registration\\Registration.tsx":"21","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\03-Password\\ResetPassword.tsx":"22","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\03-Password\\PasswordRecovery.tsx":"23","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\04-Profile\\Profile.tsx":"24","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\06-Cards\\Cards.tsx":"25","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\ProgressBar\\ProgressBar.tsx":"26","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\01-regestration-api.ts":"27","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\04-cards-api.ts":"28","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\resetPassword-thunks.ts":"29","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Button\\Button.tsx":"30","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Input\\Input.tsx":"31","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\RadioInput\\RadioInput.tsx":"32","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\SelectInput\\SelectInput.tsx":"33","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\01-Login\\Logout.tsx":"34","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\01-Login\\UserIsNotAuthorized.tsx":"35","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\ErrorSnackBar\\ErrorSnackBar.tsx":"36","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\SendingForm\\SendingForm.tsx":"37","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\06-Cards\\CardElement\\CardElement.tsx":"38","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\Paginator\\Paginator.tsx":"39","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\DoubleRange\\DoubleRange.tsx":"40","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\02-password-api.ts":"41","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\Modal.tsx":"42","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\07-Learning\\LearningPage.tsx":"43"},{"size":938,"mtime":1611436006261,"results":"44","hashOfConfig":"45"},{"size":1576,"mtime":1611436006161,"results":"46","hashOfConfig":"45"},{"size":4620,"mtime":1611436006111,"results":"47","hashOfConfig":"45"},{"size":1255,"mtime":1611436006242,"results":"48","hashOfConfig":"45"},{"size":2470,"mtime":1611436006105,"results":"49","hashOfConfig":"45"},{"size":283,"mtime":1611490919587,"results":"50","hashOfConfig":"45"},{"size":5402,"mtime":1611436006333,"results":"51","hashOfConfig":"45"},{"size":2942,"mtime":1611492850724,"results":"52","hashOfConfig":"45"},{"size":419,"mtime":1611436006106,"results":"53","hashOfConfig":"45"},{"size":1086,"mtime":1611436006107,"results":"54","hashOfConfig":"45"},{"size":974,"mtime":1611348628720,"results":"55","hashOfConfig":"45"},{"size":440,"mtime":1610218992009,"results":"56","hashOfConfig":"45"},{"size":2434,"mtime":1611492047836,"results":"57","hashOfConfig":"45"},{"size":3545,"mtime":1611348628770,"results":"58","hashOfConfig":"45"},{"size":972,"mtime":1610546206452,"results":"59","hashOfConfig":"45"},{"size":428,"mtime":1610218992005,"results":"60","hashOfConfig":"45"},{"size":3868,"mtime":1611500350599,"results":"61","hashOfConfig":"45"},{"size":1012,"mtime":1611348628752,"results":"62","hashOfConfig":"45"},{"size":794,"mtime":1610383085610,"results":"63","hashOfConfig":"45"},{"size":2706,"mtime":1611348628806,"results":"64","hashOfConfig":"45"},{"size":2174,"mtime":1611348628336,"results":"65","hashOfConfig":"45"},{"size":2366,"mtime":1611348628484,"results":"66","hashOfConfig":"45"},{"size":1977,"mtime":1611348628548,"results":"67","hashOfConfig":"45"},{"size":680,"mtime":1611348628647,"results":"68","hashOfConfig":"45"},{"size":2241,"mtime":1611494776286,"results":"69","hashOfConfig":"45"},{"size":415,"mtime":1610383085645,"results":"70","hashOfConfig":"45"},{"size":375,"mtime":1611348627715,"results":"71","hashOfConfig":"45"},{"size":1312,"mtime":1611498983205,"results":"72","hashOfConfig":"45"},{"size":1832,"mtime":1611348628736,"results":"73","hashOfConfig":"45"},{"size":556,"mtime":1610546206419,"results":"74","hashOfConfig":"45"},{"size":993,"mtime":1610642025603,"results":"75","hashOfConfig":"45"},{"size":342,"mtime":1610218992004,"results":"76","hashOfConfig":"45"},{"size":731,"mtime":1610218992004,"results":"77","hashOfConfig":"45"},{"size":514,"mtime":1611348628414,"results":"78","hashOfConfig":"45"},{"size":480,"mtime":1611348628457,"results":"79","hashOfConfig":"45"},{"size":874,"mtime":1611348627463,"results":"80","hashOfConfig":"45"},{"size":2340,"mtime":1610642025625,"results":"81","hashOfConfig":"45"},{"size":1315,"mtime":1611494776314,"results":"82","hashOfConfig":"45"},{"size":1958,"mtime":1611423663935,"results":"83","hashOfConfig":"45"},{"size":3008,"mtime":1611423759992,"results":"84","hashOfConfig":"45"},{"size":1040,"mtime":1611086612842,"results":"85","hashOfConfig":"45"},{"size":680,"mtime":1611423759994,"results":"86","hashOfConfig":"45"},{"size":3833,"mtime":1611498984099,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"328rna",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"143","usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"180"},"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\store.ts",[],["181","182"],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\NavBar\\NavBar.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\05-CardPacks\\CardPacks.tsx",["183","184"],"import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {path} from '../../04-App/App';\r\nimport {\r\n    addCardPacks,\r\n    CardPacksFilterType,\r\n    CardPacksType,\r\n    deleteCardPacks,\r\n    getCardPacks,\r\n    showMode,\r\n    updateCardPacks\r\n} from '../../00-Redux/card-packs-reducer';\r\nimport {RootStateType} from '../../04-App/store';\r\nimport CardPacksElement from './CardPaksElement/CardPacksElement';\r\nimport {Paginator} from '../../03-Components/Paginator/Paginator';\r\nimport Input from '../../03-Components/SuperComponents/Input/Input';\r\nimport Button from '../../03-Components/SuperComponents/Button/Button';\r\nimport Checkbox from '../../03-Components/SuperComponents/CheckBox/Checkbox';\r\nimport DoubleRange from '../../03-Components/SuperComponents/DoubleRange/DoubleRange';\r\n\r\nimport style from './CardPacks.module.css'\r\n\r\nconst CardPacks: React.FC = () => {\r\n    const isAuth = useSelector<RootStateType, boolean>(state => state.login.isAuth)\r\n    const cardPacks = useSelector<RootStateType, CardPacksType[]>(state => state.cardsPack.cardPacks)\r\n\r\n    //filter data\r\n    const packsTotalCount = useSelector<RootStateType, number>(state => state.cardsPack.packsTotalCount)\r\n    const filter = useSelector<RootStateType, CardPacksFilterType>(state => state.cardsPack.filter)\r\n    const currentPage = useSelector<RootStateType, number>(state => state.cardsPack.currentPage)\r\n    const pageSize = useSelector<RootStateType, number>(state => state.cardsPack.pageSize)\r\n    const userId = useSelector<RootStateType, string>(state => state.login.user._id)\r\n    const showEditMode = useSelector<RootStateType, boolean>(state => state.cardsPack.showAll)\r\n\r\n    //filter state\r\n    const [inputValue, setInputValue] = useState<string>('')\r\n    const [range, setRange] = useState([0, 15])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //get all packs\r\n    useEffect(() => {\r\n        dispatch(getCardPacks(currentPage, pageSize, filter))\r\n    }, [])\r\n\r\n    //pagination\r\n    const onPageChanged = (currentPage: number) => {\r\n        dispatch(getCardPacks(currentPage, pageSize, filtered))\r\n    }\r\n\r\n    //search request\r\n    const onSearch = () => {\r\n        dispatch(getCardPacks(currentPage, pageSize, filtered))\r\n    }\r\n\r\n    //checkbox showMode\r\n    const showOwnPack = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(showMode(e.target.checked))\r\n    }\r\n\r\n    //set input field value\r\n    const inputHandler = (e: ChangeEvent<HTMLInputElement>) => setInputValue(e.currentTarget.value)\r\n\r\n    //filter object\r\n    let filtered: CardPacksFilterType = {\r\n        packName: inputValue,\r\n        min: range[0],\r\n        max: range[1],\r\n        userId: showEditMode? userId : ''\r\n    }\r\n\r\n    //generate random id for adding pack\r\n    function genID(serverNum: number) {\r\n        return (serverNum + '' + (new Date).getTime());\r\n    }\r\n\r\n    //fake obj for adding pack\r\n    const cardTestObj: CardPacksType = {\r\n        '_id': genID(5),\r\n        name: 'NEW PACK-007',\r\n        type: 'Test card Packs 007'\r\n    }\r\n\r\n    //button action\r\n    const onAddCardPacks = () => {\r\n        dispatch(addCardPacks(cardTestObj))\r\n    }\r\n    const changeCardPacks = (cardsPack: CardPacksType) => {\r\n        dispatch(updateCardPacks(cardsPack))\r\n    }\r\n    const removeCardPacks = (_id: string) => {\r\n        dispatch(deleteCardPacks(_id))\r\n    }\r\n\r\n    const mappedPacks = cardPacks.map((p: CardPacksType) =>\r\n        <CardPacksElement key={p._id}\r\n                          pack={p}\r\n                          updateCardPacks={changeCardPacks}\r\n                          removeCardPacks={removeCardPacks}/>)\r\n\r\n    if (!isAuth) return <Redirect to={path.LOGIN}/>\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.search}>\r\n                <DoubleRange range={range} setRange={setRange}/>\r\n                <Input onChange={inputHandler}/>\r\n                <Button onClick={onSearch}>Search</Button>\r\n                <Button onClick={onAddCardPacks}>Add CardPacks</Button>\r\n                <Checkbox title={'Show only mine pack'}\r\n                          checked={showEditMode}\r\n                          onChange={showOwnPack}/>\r\n                <Paginator currentPage={currentPage}\r\n                           onPageChanged={onPageChanged}\r\n                           pageSize={pageSize}\r\n                           totalItemsCount={packsTotalCount}/>\r\n                {\r\n                    mappedPacks\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPacks","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\CheckBox\\Checkbox.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\login-reducer.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\api.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\card-packs-reducer.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\05-CardPacks\\CardPaksElement\\CardPacksElement.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\00-login-api.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\03-cardsPack-api.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\index.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\reportWebVitals.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\App.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\registration-reducer.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\app-reducer.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\profile-reducer.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\cards-reducer.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\04-App\\AllComponents.tsx",["185"],"import React from 'react';\r\nimport Input from '../03-Components/SuperComponents/Input/Input';\r\nimport Button from '../03-Components/SuperComponents/Button/Button';\r\nimport Checkbox from '../03-Components/SuperComponents/CheckBox/Checkbox';\r\nimport RadioInput from '../03-Components/SuperComponents/RadioInput/RadioInput';\r\nimport SelectInput from '../03-Components/SuperComponents/SelectInput/SelectInput';\r\nimport ProgressBar from '../03-Components/SuperComponents/ProgressBar/ProgressBar';\r\nimport CardPacks from '../02-Pages/05-CardPacks/CardPacks';\r\n\r\ntype AllComponentsPropsType = {}\r\n\r\nexport type CartUpdateType = {\r\n    _id: string,\r\n    name?:string\r\n}\r\n\r\nconst AllComponents: React.FC<AllComponentsPropsType> = () => {\r\n\r\n    return <div className={'allComponents'}>\r\n        <Input/>\r\n        <Button> Click me </Button>\r\n        <Checkbox title={'Checkbox'}/>\r\n        <RadioInput/>\r\n        <RadioInput/>\r\n        <SelectInput/>\r\n        <ProgressBar/>\r\n    </div>\r\n}\r\n\r\nexport default AllComponents","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\NotFound\\NotFound.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\01-Login\\Login.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\02-Registration\\Registration.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\03-Password\\ResetPassword.tsx",["186"],"import {path} from '../../04-App/App';\r\nimport React, {useEffect} from 'react';\r\nimport {RootStateType} from '../../04-App/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport ErrorSnackBar from '../../03-Components/ErrorSnackBar/ErrorSnackBar';\r\nimport {setAppErrorAC, setAppStatusAC} from '../../00-Redux/app-reducer';\r\nimport {SendingForm} from '../../03-Components/SuperComponents/SendingForm/SendingForm';\r\nimport {resetPassword} from '../../00-Redux/resetPassword-thunks';\r\nimport ProgressBar from '../../03-Components/SuperComponents/ProgressBar/ProgressBar';\r\n\r\nimport s from './Password.module.css'\r\n\r\nexport const ResetPassword: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<Record<string, string | undefined>>();\r\n    const history = useHistory();\r\n\r\n    const appStatus = useSelector<RootStateType, string>((state) => state.app.statusResponse)\r\n    const error = useSelector<RootStateType, string | null>((state) => state.app.error)\r\n\r\n    const tokenName = token ? token : ''\r\n\r\n    const resetOldPassword = (password: string) => {\r\n        dispatch(resetPassword(password, tokenName))\r\n\r\n    }\r\n\r\n    const redirect = () => {\r\n        history.push(path.LOGIN);\r\n    }\r\n\r\n    //redirect\r\n    if (appStatus === 'succeeded') {\r\n        setTimeout(redirect, 3000)\r\n    }\r\n\r\n    //clear status\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            dispatch(setAppStatusAC('idle'))\r\n            dispatch(setAppErrorAC(null))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={s.pageWrapper}>\r\n            {\r\n                appStatus === 'loading' && <ProgressBar/>\r\n            }\r\n            <SendingForm formName={'RESET PASSWORD'}\r\n                         formDescription={`Create a new, strong password that you don't use for other websites`}\r\n                         callback={resetOldPassword}\r\n                         inputPlaceholder={'enter your new password'}\r\n                         inputType={'password'}\r\n                         buttonName={'Reset'}\r\n                         btnDisabled={appStatus === 'loading'}\r\n                         navLinkPath={path.LOGIN}\r\n            />\r\n            {\r\n                error && <ErrorSnackBar errorMessage={error}/>\r\n            }\r\n        </div>\r\n    )\r\n}","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\03-Password\\PasswordRecovery.tsx",["187"],"import {path} from '../../04-App/App';\r\nimport React, {useEffect} from 'react';\r\nimport {RootStateType} from '../../04-App/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport ErrorSnackBar from '../../03-Components/ErrorSnackBar/ErrorSnackBar';\r\nimport {setAppErrorAC, setAppStatusAC} from '../../00-Redux/app-reducer';\r\nimport ProgressBar from '../../03-Components/SuperComponents/ProgressBar/ProgressBar';\r\nimport {SendingForm} from '../../03-Components/SuperComponents/SendingForm/SendingForm';\r\nimport {sendRecoveryEmail} from '../../00-Redux/resetPassword-thunks';\r\n\r\nimport s from './Password.module.css'\r\n\r\nexport const PasswordRecovery: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const appStatus = useSelector<RootStateType, string>((state) => state.app.statusResponse)\r\n    const error = useSelector<RootStateType, string | null>((state) => state.app.error)\r\n\r\n    const sendEmail = (email: string) => {\r\n        dispatch(sendRecoveryEmail(email))\r\n    }\r\n\r\n    //clear status\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            dispatch(setAppStatusAC('idle'))\r\n            dispatch(setAppErrorAC(null))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={s.pageWrapper}>\r\n            {\r\n                appStatus === 'loading' && <ProgressBar/>\r\n            }\r\n            <SendingForm formName={'RECOVERY PASSWORD'}\r\n                         formDescription={`Enter the email address you used to register and we'll send you the instruction`}\r\n                         callback={sendEmail}\r\n                         inputPlaceholder={'enter your email address'}\r\n                         inputType={'email'}\r\n                         buttonName={'Send'}\r\n                         btnDisabled={appStatus === 'loading'}\r\n                         navLinkPath={path.LOGIN}\r\n            />\r\n            {\r\n                error && <ErrorSnackBar errorMessage={error}/>\r\n            }\r\n        </div>\r\n    )\r\n}","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\04-Profile\\Profile.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\06-Cards\\Cards.tsx",["188","189","190"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../04-App/store';\r\nimport Input from '../../03-Components/SuperComponents/Input/Input';\r\nimport Button from '../../03-Components/SuperComponents/Button/Button';\r\n\r\nimport style from './Cards.module.css'\r\nimport {addCard, CardType, deleteCard, getCards, updateCard} from '../../00-Redux/cards-reducer';\r\nimport {useParams} from 'react-router-dom';\r\nimport CardElement from './CardElement/CardElement';\r\n\r\nconst Cards: React.FC = () => {\r\n\r\n    const {id} = useParams<{ id: string }>();\r\n\r\n    const cards = useSelector<RootStateType, CardType[]>(state => state.cards.cards)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //request on start, data from redux\r\n    useEffect(() => {\r\n        dispatch(getCards(id))\r\n    }, [])\r\n\r\n    const onSearch = () => {\r\n        // dispatch(getCards({packName: inputValue, min: range[0], max: range[1]}))\r\n    }\r\n\r\n    function genID(serverNum: number) {\r\n        return (serverNum + '' + (new Date).getTime());\r\n    }\r\n\r\n    //fake obj for creating\r\n    const cardTestObj: CardType = {\r\n        _id:genID(2),\r\n        type: 'Java',\r\n        question: 'fake quessssstion',\r\n        answer: `fake answerrrrr`,\r\n        cardsPack_id: id,\r\n        grade: 4.54654,\r\n        rating:0\r\n    }\r\n\r\n    const onAddCard = () => {\r\n        dispatch(addCard(cardTestObj))\r\n    }\r\n\r\n    const changeCard = (card: CardType) => {\r\n        dispatch(updateCard(card))\r\n    }\r\n\r\n    const removeCard = (id: string) => {\r\n        dispatch(deleteCard(id))\r\n    }\r\n\r\n    const mappedCards = cards.map((card: CardType) => <CardElement key={card._id}\r\n                                                                   card={card}\r\n                                                                   updateCard={changeCard}\r\n                                                                   removeCard={removeCard}/>)\r\n    return <div>\r\n        <div className={style.search}>\r\n            <Button onClick={onSearch}>Search</Button>\r\n            <Button onClick={onAddCard}>Add Card</Button>\r\n            {\r\n                mappedCards\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Cards","G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\ProgressBar\\ProgressBar.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\01-regestration-api.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\04-cards-api.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\00-Redux\\resetPassword-thunks.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Button\\Button.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Input\\Input.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\RadioInput\\RadioInput.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\SelectInput\\SelectInput.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\01-Login\\Logout.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\01-Login\\UserIsNotAuthorized.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\ErrorSnackBar\\ErrorSnackBar.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\SendingForm\\SendingForm.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\06-Cards\\CardElement\\CardElement.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\Paginator\\Paginator.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\DoubleRange\\DoubleRange.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\01-API\\02-password-api.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\03-Components\\SuperComponents\\Modal\\Modal.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday-2021\\src\\02-Pages\\07-Learning\\LearningPage.tsx",["191","192","193"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../04-App/store';\r\nimport {CardType, getCards, sendGrade} from '../../00-Redux/cards-reducer';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\n\r\nimport s from './LearningPage.module.css'\r\nimport {log} from 'util';\r\nimport {path} from '../../04-App/App';\r\n\r\nconst getCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nconst LearningPage: React.FC = () => {\r\n    //get Pack ID\r\n    const {id} = useParams<{ id: string }>();\r\n\r\n    function genID(serverNum: number) {\r\n        return (serverNum + '' + (new Date).getTime());\r\n    }\r\n\r\n    const [first, setFirst] = useState<boolean>(true)\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [card, setCard] = useState<CardType>({\r\n        _id: genID(2),\r\n        type: 'Java',\r\n        question: 'fake quessssstion',\r\n        answer: `fake answerrrrr`,\r\n        cardsPack_id: id,\r\n        grade: 4.54654,\r\n        rating: 0\r\n    })\r\n\r\n\r\n    //cards from redux\r\n    const cards = useSelector<RootStateType, CardType[]>(state => state.cards.cards)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //get cards use Pack ID\r\n    useEffect(() => {\r\n\r\n        console.log('Start UseEffect')\r\n\r\n        if (first) {\r\n            dispatch(getCards(id))\r\n            setFirst(false)\r\n        }\r\n\r\n        console.log('cards in redux')\r\n\r\n        if (cards.length > 0) {\r\n            setCard(getCard(cards))\r\n\r\n            return () => {\r\n                console.log('learningPage clear effect ')\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    const onNext = () => {\r\n        setIsChecked(false);\r\n\r\n        if (cards.length > 0) {\r\n            setCard(getCard(cards));\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    const setGrade = (grade: number) => {\r\n        const gradeObj = {\r\n            grade: grade,\r\n            card_id: card._id\r\n        }\r\n        dispatch(sendGrade(gradeObj))\r\n    }\r\n\r\n    const isAuth = useSelector<RootStateType, boolean>(state => state.login.isAuth)\r\n    if (!isAuth) return <Redirect to={path.LOGIN}/>\r\n    return (\r\n        <div className={s.pageContainer}>\r\n            <div key={card._id} className={s.wrapper}>\r\n                <div>{card.question}</div>\r\n                <div>{card._id}</div>\r\n                <div>\r\n                    <button onClick={() => setIsChecked(true)}>Проверить</button>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        isChecked && (\r\n                            <div>\r\n                                <span>{card.answer}</span>\r\n                                {\r\n                                    grades.map((el, i) => (\r\n                                        <button key={i} onClick={(e) => setGrade(i + 1)}>{el}</button>\r\n                                    ))\r\n                                }\r\n                                <div>\r\n                                    <button onClick={onNext}>Next</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LearningPage",{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":45,"column":8,"nodeType":"200","endLine":45,"endColumn":10,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":75,"column":35,"nodeType":"204","messageId":"205","endLine":75,"endColumn":43,"fix":"206"},{"ruleId":"207","severity":1,"message":"208","line":8,"column":8,"nodeType":"209","messageId":"210","endLine":8,"endColumn":17},{"ruleId":"198","severity":1,"message":"211","line":46,"column":8,"nodeType":"200","endLine":46,"endColumn":10,"suggestions":"212"},{"ruleId":"198","severity":1,"message":"211","line":31,"column":8,"nodeType":"200","endLine":31,"endColumn":10,"suggestions":"213"},{"ruleId":"207","severity":1,"message":"214","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":13},{"ruleId":"198","severity":1,"message":"215","line":23,"column":8,"nodeType":"200","endLine":23,"endColumn":10,"suggestions":"216"},{"ruleId":"202","severity":1,"message":"203","line":30,"column":35,"nodeType":"204","messageId":"205","endLine":30,"endColumn":43,"fix":"217"},{"ruleId":"207","severity":1,"message":"218","line":8,"column":9,"nodeType":"209","messageId":"210","endLine":8,"endColumn":12},{"ruleId":"202","severity":1,"message":"203","line":31,"column":35,"nodeType":"204","messageId":"205","endLine":31,"endColumn":43,"fix":"219"},{"ruleId":"198","severity":1,"message":"220","line":71,"column":8,"nodeType":"200","endLine":71,"endColumn":10,"suggestions":"221"},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', and 'pageSize'. Either include them or remove the dependency array.","ArrayExpression",["224"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"225","text":"226"},"@typescript-eslint/no-unused-vars","'CardPacks' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["227"],["228"],"'Input' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["229"],{"range":"230","text":"226"},"'log' is defined but never used.",{"range":"231","text":"226"},"React Hook useEffect has missing dependencies: 'cards', 'dispatch', 'first', and 'id'. Either include them or remove the dependency array.",["232"],"no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},[2933,2933],"()",{"desc":"235","fix":"236"},{"desc":"235","fix":"237"},{"desc":"238","fix":"239"},[1059,1059],[1185,1185],{"desc":"240","fix":"241"},"Update the dependencies array to be: [currentPage, dispatch, filter, pageSize]",{"range":"242","text":"243"},"Update the dependencies array to be: [dispatch]",{"range":"244","text":"245"},{"range":"246","text":"245"},"Update the dependencies array to be: [dispatch, id]",{"range":"247","text":"248"},"Update the dependencies array to be: [cards, dispatch, first, id]",{"range":"249","text":"250"},[2057,2059],"[currentPage, dispatch, filter, pageSize]",[1577,1579],"[dispatch]",[1183,1185],[845,847],"[dispatch, id]",[2164,2166],"[cards, dispatch, first, id]"]